<!-- Car.astro -->
<script>
  import * as THREE from 'three'

  const camera = new THREE.PerspectiveCamera(
    75,
    window.innerWidth / window.innerHeight,
    0.1,
    1000,
  )
  camera.position.z = 20

  const renderer = new THREE.WebGLRenderer({
    canvas: document.getElementById('canvas'),
  })
  renderer.setSize(800, 600)

  export default function Car() {
    const car = createCar()
    const scene = new THREE.Scene()
    scene.add(car)

    // Render loop
    function animate() {
      requestAnimationFrame(animate)

      // Rotate the wheels
      car.traverse(child => {
        if (child instanceof THREE.Mesh && child.userData.isWheel) {
          child.rotation.x += 0.05
        }
      })

      // Render the scene
      renderer.render(scene, camera)
    }

    animate()

    return { scene }
  }

  function createCar() {
    const car = new THREE.Group()

    // Body
    const bodyGeometry = new THREE.BoxGeometry(4, 2, 1)
    const bodyMaterial = new THREE.MeshBasicMaterial({ color: 0x00ff00 })
    const body = new THREE.Mesh(bodyGeometry, bodyMaterial)
    car.add(body)

    // Front wheel
    const frontWheel = createWheel()
    frontWheel.position.set(1.5, -1, 0.5)
    car.add(frontWheel)

    // Back wheel
    const backWheel = createWheel()
    backWheel.position.set(-1.5, -1, 0.5)
    car.add(backWheel)

    return car
  }

  function createWheel() {
    const wheelGeometry = new THREE.BoxGeometry(1, 1, 0.5)
    const wheelMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 })
    const wheel = new THREE.Mesh(wheelGeometry, wheelMaterial)
    wheel.userData.isWheel = true

    return wheel
  }
</script>
